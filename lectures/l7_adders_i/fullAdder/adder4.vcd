$date
	Mon Oct 28 16:48:30 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder4_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " c_out $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % c_in $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % c_in $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " c_out $end
$var wire 5 ) c_inputs [4:0] $end
$scope begin adder[0] $end
$scope module fulladder $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , c_in $end
$var wire 1 - c_out $end
$var wire 1 . sum $end
$upscope $end
$upscope $end
$scope begin adder[1] $end
$scope module fulladder $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 c_in $end
$var wire 1 2 c_out $end
$var wire 1 3 sum $end
$upscope $end
$upscope $end
$scope begin adder[2] $end
$scope module fulladder $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 c_in $end
$var wire 1 7 c_out $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$scope begin adder[3] $end
$scope module fulladder $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; c_in $end
$var wire 1 < c_out $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1=
0<
1;
0:
09
08
17
16
15
04
03
12
11
00
1/
1.
1-
1,
1+
1*
b1111 )
b1001 (
b101 '
b11 &
1%
b101 $
b11 #
0"
b1001 !
$end
